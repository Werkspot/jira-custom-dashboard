# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: 'en'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        public: false       # Allows optimizing the container by removing unused services; this also means
                            # fetching services directly from the container via $container->get() won't work.
                            # The best practice is to be explicit about your dependencies anyway.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    Werkspot\JiraDashboard\ConfidenceWidget\:
        resource: '../src/Werkspot/JiraDashboard/ConfidenceWidget/'
        exclude: ''
    Werkspot\JiraDashboard\BurndownWidget\:
        resource: '../src/Werkspot/JiraDashboard/BurndownWidget/'
        exclude: ''
    Werkspot\JiraDashboard\SprintWidget\:
            resource: '../src/Werkspot/JiraDashboard/SprintWidget/'
            exclude: ''
    Werkspot\JiraDashboard\AchievedSprintsWidget\:
            resource: '../src/Werkspot/JiraDashboard/AchievedSprintsWidget/'
            exclude: ''
    Werkspot\JiraDashboard\SharedKernel\:
        resource: '../src/Werkspot/JiraDashboard/SharedKernel/'
        exclude: ''

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    Werkspot\JiraDashboard\ConfidenceWidget\Infrastructure\Symfony\Controller\:
        resource: '../src/Werkspot/JiraDashboard/ConfidenceWidget/Infrastructure/Symfony/Controller'
        tags: ['controller.service_arguments']
    Werkspot\JiraDashboard\SprintWidget\Infrastructure\Symfony\Controller\:
            resource: '../src/Werkspot/JiraDashboard/SprintWidget/Infrastructure/Symfony/Controller'
            tags: ['controller.service_arguments']
    Werkspot\JiraDashboard\AchievedSprintsWidget\Infrastructure\Symfony\Controller\:
                resource: '../src/Werkspot/JiraDashboard/AchievedSprintsWidget/Infrastructure/Symfony/Controller'
                tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    # service aliases
    Werkspot\JiraDashboard\SharedKernel\Domain\Model\Sprint\SprintRepositoryInterface: '@Werkspot\JiraDashboard\SharedKernel\Infrastructure\Persistence\Doctrine\Sprint\SprintRepositoryDoctrineAdapter'
    Werkspot\JiraDashboard\SharedKernel\Domain\Model\Team\TeamRepositoryInterface: '@Werkspot\JiraDashboard\SharedKernel\Infrastructure\Persistence\Doctrine\Team\TeamRepositoryDoctrineAdapter'
    Werkspot\JiraDashboard\ConfidenceWidget\Domain\ConfidenceRepositoryInterface: '@Werkspot\JiraDashboard\ConfidenceWidget\Infrastructure\Persistence\Doctrine\Confidence\ConfidenceRepositoryDoctrineAdapter'
    Werkspot\JiraDashboard\BurndownWidget\Domain\RemainingPointsRepositoryInterface: '@Werkspot\JiraDashboard\BurndownWidget\Infrastructure\Persistence\Doctrine\RemainingPoints\RemainingPointsRepositoryDoctrineAdapter'

    # service factories
    League\Tactician\CommandBus:
        factory: 'Werkspot\JiraDashboard\SharedKernel\Infrastructure\Messaging\CommandBus\Tactician\TacticianCommandBusFactory:create'
        public: true

    League\Event\EmitterInterface:
        factory: 'Werkspot\JiraDashboard\SharedKernel\Infrastructure\Messaging\EventBus\League\LeagueEventBusFactory:create'
